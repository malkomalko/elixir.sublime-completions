{"scope":"source.elixir","completions":[{"trigger":"ExUnit.Assertions.assert(${1:expected}, ${2:message})","contents":"ExUnit.Assertions.assert(${1:expected}, ${2:message})"},{"trigger":"ExUnit.Assertions.assert(${1:value}, ${2:expected}, ${3:actual}, ${4:opts})","contents":"ExUnit.Assertions.assert(${1:value}, ${2:expected}, ${3:actual}, ${4:opts})"},{"trigger":"ExUnit.Assertions.assert_in_delta(${1:expected}, ${2:received}, ${3:delta}, ${4:message // nil})","contents":"ExUnit.Assertions.assert_in_delta(${1:expected}, ${2:received}, ${3:delta}, ${4:message // nil})"},{"trigger":"ExUnit.Assertions.assert_raise(${1:exception}, ${2:function})","contents":"ExUnit.Assertions.assert_raise(${1:exception}, ${2:function})"},{"trigger":"ExUnit.Assertions.assert_raise(${1:exception}, ${2:message}, ${3:function})","contents":"ExUnit.Assertions.assert_raise(${1:exception}, ${2:message}, ${3:function})"},{"trigger":"ExUnit.Assertions.flunk(${1:message // \"Epic Fail!\"})","contents":"ExUnit.Assertions.flunk(${1:message // \"Epic Fail!\"})"},{"trigger":"ExUnit.Assertions.refute(${1:not_expected}, ${2:message})","contents":"ExUnit.Assertions.refute(${1:not_expected}, ${2:message})"},{"trigger":"ExUnit.Assertions.refute_in_delta(${1:expected}, ${2:received}, ${3:delta}, ${4:message // nil})","contents":"ExUnit.Assertions.refute_in_delta(${1:expected}, ${2:received}, ${3:delta}, ${4:message // nil})"}]}