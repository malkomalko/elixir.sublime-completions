{"scope":"source.elixir","completions":[{"trigger":"File.biniterator(${1:device})","contents":"File.biniterator(${1:device})"},{"trigger":"File.biniterator!(${1:file}, ${2:mode // []})","contents":"File.biniterator!(${1:file}, ${2:mode // []})"},{"trigger":"File.cd(${1:path})","contents":"File.cd(${1:path})"},{"trigger":"File.cd!(${1:path})","contents":"File.cd!(${1:path})"},{"trigger":"File.cd!(${1:path}, ${2:function})","contents":"File.cd!(${1:path}, ${2:function})"},{"trigger":"File.close(${1:io_device})","contents":"File.close(${1:io_device})"},{"trigger":"File.copy(${1:source}, ${2:destination}, ${3:bytes_count // :infinity})","contents":"File.copy(${1:source}, ${2:destination}, ${3:bytes_count // :infinity})"},{"trigger":"File.copy!(${1:source}, ${2:destination}, ${3:bytes_count // :infinity})","contents":"File.copy!(${1:source}, ${2:destination}, ${3:bytes_count // :infinity})"},{"trigger":"File.cp(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})","contents":"File.cp(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})"},{"trigger":"File.cp!(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})","contents":"File.cp!(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})"},{"trigger":"File.cp_r(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})","contents":"File.cp_r(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})"},{"trigger":"File.cp_r!(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})","contents":"File.cp_r!(${1:source}, ${2:destination}, ${3:callback // fn _}, ${4:_ -> true end})"},{"trigger":"File.cwd()","contents":"File.cwd()"},{"trigger":"File.cwd!()","contents":"File.cwd!()"},{"trigger":"File.dir?(${1:path})","contents":"File.dir?(${1:path})"},{"trigger":"File.exists?(${1:path})","contents":"File.exists?(${1:path})"},{"trigger":"File.iterator(${1:device})","contents":"File.iterator(${1:device})"},{"trigger":"File.iterator!(${1:file}, ${2:mode // []})","contents":"File.iterator!(${1:file}, ${2:mode // []})"},{"trigger":"File.ls(${1:path // \".\"})","contents":"File.ls(${1:path // \".\"})"},{"trigger":"File.ls!(${1:dir // \".\"})","contents":"File.ls!(${1:dir // \".\"})"},{"trigger":"File.mkdir(${1:path})","contents":"File.mkdir(${1:path})"},{"trigger":"File.mkdir!(${1:path})","contents":"File.mkdir!(${1:path})"},{"trigger":"File.mkdir_p(${1:path})","contents":"File.mkdir_p(${1:path})"},{"trigger":"File.mkdir_p!(${1:path})","contents":"File.mkdir_p!(${1:path})"},{"trigger":"File.open(${1:path}, ${2:modes // []})","contents":"File.open(${1:path}, ${2:modes // []})"},{"trigger":"File.open(${1:path}, ${2:modes}, ${3:function})","contents":"File.open(${1:path}, ${2:modes}, ${3:function})"},{"trigger":"File.open!(${1:path}, ${2:modes // []})","contents":"File.open!(${1:path}, ${2:modes // []})"},{"trigger":"File.open!(${1:path}, ${2:modes}, ${3:function})","contents":"File.open!(${1:path}, ${2:modes}, ${3:function})"},{"trigger":"File.read(${1:path})","contents":"File.read(${1:path})"},{"trigger":"File.read!(${1:path})","contents":"File.read!(${1:path})"},{"trigger":"File.regular?(${1:path})","contents":"File.regular?(${1:path})"},{"trigger":"File.rm(${1:path})","contents":"File.rm(${1:path})"},{"trigger":"File.rm!(${1:path})","contents":"File.rm!(${1:path})"},{"trigger":"File.rm_rf(${1:path})","contents":"File.rm_rf(${1:path})"},{"trigger":"File.rm_rf!(${1:path})","contents":"File.rm_rf!(${1:path})"},{"trigger":"File.rmdir(${1:path})","contents":"File.rmdir(${1:path})"},{"trigger":"File.rmdir!(${1:path})","contents":"File.rmdir!(${1:path})"},{"trigger":"File.stat(${1:path}, ${2:opts // []})","contents":"File.stat(${1:path}, ${2:opts // []})"},{"trigger":"File.stat!(${1:path}, ${2:opts // []})","contents":"File.stat!(${1:path}, ${2:opts // []})"},{"trigger":"File.touch(${1:path}, ${2:time // :calendar.local_time()})","contents":"File.touch(${1:path}, ${2:time // :calendar.local_time()})"},{"trigger":"File.touch!(${1:path}, ${2:time // :calendar.local_time()})","contents":"File.touch!(${1:path}, ${2:time // :calendar.local_time()})"},{"trigger":"File.write(${1:path}, ${2:content}, ${3:modes // []})","contents":"File.write(${1:path}, ${2:content}, ${3:modes // []})"},{"trigger":"File.write!(${1:path}, ${2:content}, ${3:modes // []})","contents":"File.write!(${1:path}, ${2:content}, ${3:modes // []})"},{"trigger":"File.write_stat(${1:path}, ${2:stat}, ${3:opts // []})","contents":"File.write_stat(${1:path}, ${2:stat}, ${3:opts // []})"},{"trigger":"File.write_stat!(${1:path}, ${2:stat}, ${3:opts // []})","contents":"File.write_stat!(${1:path}, ${2:stat}, ${3:opts // []})"}]}