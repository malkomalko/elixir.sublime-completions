{"scope":"source.elixir","completions":[{"trigger":"Regex.captures(${1:regex}, ${2:string}, ${3:options // []})","contents":"captures(${1:regex}, ${2:string}, ${3:options // []})"},{"trigger":"Regex.compile(${1:source}, ${2:options // \"\"})","contents":"compile(${1:source}, ${2:options // \"\"})"},{"trigger":"Regex.compile!(${1:source}, ${2:options // \"\"})","contents":"compile!(${1:source}, ${2:options // \"\"})"},{"trigger":"Regex.groups(${1:arg1})","contents":"groups(${1:arg1})"},{"trigger":"Regex.index(${1:arg1}, ${2:string})","contents":"index(${1:arg1}, ${2:string})"},{"trigger":"Regex.match?(${1:arg1}, ${2:string})","contents":"match?(${1:arg1}, ${2:string})"},{"trigger":"Regex.opts(${1:arg1})","contents":"opts(${1:arg1})"},{"trigger":"Regex.re_pattern(${1:arg1})","contents":"re_pattern(${1:arg1})"},{"trigger":"Regex.replace(${1:arg1}, ${2:string}, ${3:replacement}, ${4:options // []})","contents":"replace(${1:arg1}, ${2:string}, ${3:replacement}, ${4:options // []})"},{"trigger":"Regex.run(${1:regex}, ${2:string}, ${3:options // []})","contents":"run(${1:regex}, ${2:string}, ${3:options // []})"},{"trigger":"Regex.scan(${1:regex}, ${2:string}, ${3:options // []})","contents":"scan(${1:regex}, ${2:string}, ${3:options // []})"},{"trigger":"Regex.source(${1:arg1})","contents":"source(${1:arg1})"},{"trigger":"Regex.split(${1:regex}, ${2:string}, ${3:options // []})","contents":"split(${1:regex}, ${2:string}, ${3:options // []})"}]}